# Generated by Django 3.2.5 on 2021-08-06 06:11

import apps.media.models
import apps.operator.models
import apps.vehicle.models
import datetime
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='OperatorModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('employee_id', apps.operator.models.CharField(default='', max_length=150, verbose_name='Employee ID')),
                ('firstname', apps.operator.models.CharField(default='', max_length=100, verbose_name='Firstname')),
                ('lastname', apps.operator.models.CharField(default='', max_length=100, verbose_name='Lastname')),
                ('middlename', apps.operator.models.CharField(default='', max_length=100, verbose_name='Middle Name')),
                ('birthdate', models.DateField(default=datetime.datetime.now, verbose_name='Date of Birth')),
                ('address', apps.operator.models.CharField(default='', help_text='No., Street, City / Municipality, Province, Zip Code', max_length=150, verbose_name='Address')),
                ('contact_no', apps.operator.models.CharField(default='', max_length=13, verbose_name='Contact No.')),
                ('email', models.EmailField(default='', help_text='Email must be valid and in use.', max_length=254, verbose_name='Email Address')),
                ('date_employed', models.DateField(default=datetime.datetime.now, verbose_name='Date Employed')),
                ('position', apps.operator.models.CharField(default='', max_length=100, verbose_name='Job Title')),
                ('area', apps.operator.models.CharField(default='Not Available', max_length=100, verbose_name='Area Coverage')),
                ('operator_type', apps.operator.models.CharField(choices=[('driver', 'Driver'), ('helper', 'Helper')], help_text='For identification purposes.', max_length=15, verbose_name='Operator Type')),
                ('record_created', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'tbl_operators',
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('vehicle_name', apps.vehicle.models.CharField(default='', help_text='Enter a nickname to distinguish this vehicle in FMS.', max_length=150, verbose_name='Vechile Name')),
                ('vehicle_type', apps.vehicle.models.CharField(choices=[('sedan', 'Sedan'), ('hatchback', 'Hatchback'), ('mpv', 'MPV'), ('suv', 'Suv'), ('crossover', 'Crossover'), ('van', 'Van'), ('pick-up', 'Pick-up'), ('hybrid', 'Hybrid'), ('4 wheel truck', '4 wheel truck'), ('6 wheel truck', '6 wheel truck'), ('8 wheel truck', '8 wheel truck'), ('10 wheel truck', '10 wheel truck')], help_text='Categorized this vehicle.', max_length=50, verbose_name='Vehicle Type')),
                ('ownership', apps.vehicle.models.CharField(default='', max_length=150, verbose_name='Ownership')),
                ('area_coverage', apps.vehicle.models.CharField(default='', max_length=200, verbose_name='Area Coverage')),
                ('position_assign', apps.vehicle.models.CharField(default='', max_length=200, verbose_name='Position Assign')),
                ('case_capacity', models.IntegerField(default=0, verbose_name='Case Capacity')),
                ('date_receive', models.DateField(default=datetime.datetime.now, verbose_name='Date Receive')),
                ('date_acquired', models.DateField(default=datetime.datetime.now, verbose_name='Date Acquired')),
                ('aquisition_cost', models.FloatField(default=0.0, verbose_name='Aquisition Cost')),
                ('useful_life_month', models.IntegerField(default=0, help_text='Enter in Months.', verbose_name='Useful life in month')),
                ('origin', apps.vehicle.models.CharField(default='', max_length=200, verbose_name='Origin')),
                ('status', apps.vehicle.models.CharField(choices=[('active', 'Active'), ('in Active', 'In Active'), ('maintenance', 'Maintenance'), ('out of service', 'Out of Service')], help_text="Vehicle's Status", max_length=50, verbose_name='Status')),
                ('record_created', models.DateField(auto_now=True)),
            ],
            options={
                'db_table': 'tbl_vehicles',
            },
        ),
        migrations.CreateModel(
            name='VehicleOrModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('or_no', apps.vehicle.models.CharField(default='', max_length=25, unique=True, verbose_name='OR No.')),
                ('field_office_code', apps.vehicle.models.CharField(default='', max_length=200, verbose_name='Field Office Code')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='Date')),
                ('receive_from', apps.vehicle.models.CharField(default='', help_text='Lastname, Firstname, MI.', max_length=100, verbose_name='Receive From')),
                ('address', apps.vehicle.models.CharField(default='', help_text='No., Street, City / Municipality, Province, Zip Code', max_length=100, verbose_name='Address')),
                ('transaction_no', apps.vehicle.models.CharField(default='', max_length=100, verbose_name='Transaction No.')),
                ('posted_date', models.DateField(default=datetime.datetime.now, verbose_name='Posted Date')),
                ('private', apps.vehicle.models.CharField(default='', max_length=150, verbose_name='Private')),
                ('file_no', apps.vehicle.models.CharField(default='', max_length=100, verbose_name='File No.')),
                ('record_created', models.DateField(auto_now=True)),
                ('fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_or_rn', to='apps.vehiclemodel')),
            ],
            options={
                'db_table': 'tbl_vehicle_or',
            },
        ),
        migrations.CreateModel(
            name='VehicleOrBreakdownPaymentModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('description', apps.vehicle.models.CharField(default='', max_length=100, verbose_name='Description')),
                ('qty', models.PositiveIntegerField(default=1, verbose_name='Qty')),
                ('cost', models.DecimalField(decimal_places=2, default='', max_digits=15, verbose_name='Cost')),
                ('fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fk_orbp_rn', to='apps.vehicleormodel')),
            ],
            options={
                'db_table': 'tbl_vehicle_or_breakdown_payment',
            },
        ),
        migrations.CreateModel(
            name='VehicleCrModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('cr_no', models.IntegerField(error_messages={'unique': 'CR no. is already exists in some other data.'}, unique=True, verbose_name='CR No.')),
                ('date', models.DateField(default=datetime.datetime.now, verbose_name='Date')),
                ('field_office', apps.vehicle.models.CharField(default='', max_length=200, verbose_name='Field Office')),
                ('chasis_no', apps.vehicle.models.CharField(default='', error_messages={'unique': 'Chasis no. is already exists in some other data.'}, max_length=100, unique=True, verbose_name='Chasis No.')),
                ('engine_no', apps.vehicle.models.CharField(default='', error_messages={'unique': 'Engine no. is already exists in some other data.'}, max_length=100, unique=True, verbose_name='Engine No.')),
                ('plate_no', apps.vehicle.models.CharField(default='', max_length=20, verbose_name='Plate No.')),
                ('mvfile_no', apps.vehicle.models.CharField(default='', max_length=30, verbose_name='MV File No.')),
                ('denomination', apps.vehicle.models.CharField(default='', max_length=100, verbose_name='Denomination')),
                ('piston_displacement', apps.vehicle.models.CharField(default='', max_length=100, verbose_name='Piston Displacement')),
                ('no_cyclender', apps.vehicle.models.CharField(default='', max_length=150, verbose_name='No. Cyclender')),
                ('fuel_type', apps.vehicle.models.CharField(choices=[('gasoline', 'Gasoline'), ('diesel', 'Diesel'), ('e85', 'E85'), ('various ethanol mixtures', 'Various Ethanol Mixtures')], max_length=50, verbose_name='Fuel Type')),
                ('make', apps.vehicle.models.CharField(default='', max_length=150, verbose_name='Make')),
                ('series', apps.vehicle.models.CharField(default='', max_length=150, verbose_name='Series')),
                ('body_type', apps.vehicle.models.CharField(default='', max_length=100, verbose_name='Body Type')),
                ('body_no', apps.vehicle.models.CharField(default='', max_length=150, verbose_name='Body No.')),
                ('year_model', apps.vehicle.models.CharField(choices=[('2021', '2021'), ('2020', '2020'), ('2019', '2019'), ('2018', '2018'), ('2017', '2017'), ('2016', '2016'), ('2015', '2015'), ('2014', '2014'), ('2013', '2013'), ('2012', '2012'), ('2011', '2011'), ('2010', '2010'), ('2009', '2009'), ('2008', '2008'), ('2007', '2007'), ('2006', '2006'), ('2005', '2005'), ('2004', '2004'), ('2003', '2003'), ('2002', '2002'), ('2001', '2001'), ('2000', '2000'), ('1999', '1999'), ('1998', '1998'), ('1997', '1997'), ('1996', '1996'), ('1995', '1995'), ('1994', '1994'), ('1993', '1993'), ('1992', '1992'), ('1991', '1991'), ('1990', '1990'), ('1989', '1989'), ('1988', '1988'), ('1987', '1987'), ('1986', '1986'), ('1985', '1985'), ('1984', '1984'), ('1983', '1983'), ('1982', '1982'), ('1981', '1981'), ('1980', '1980'), ('1979', '1979'), ('1978', '1978'), ('1977', '1977'), ('1976', '1976'), ('1975', '1975'), ('1974', '1974'), ('1973', '1973'), ('1972', '1972'), ('1971', '1971'), ('1970', '1970'), ('1969', '1969'), ('1968', '1968'), ('1967', '1967'), ('1966', '1966'), ('1965', '1965'), ('1964', '1964'), ('1963', '1963'), ('1962', '1962'), ('1961', '1961'), ('1960', '1960'), ('1959', '1959'), ('1958', '1958'), ('1957', '1957'), ('1956', '1956'), ('1955', '1955'), ('1954', '1954'), ('1953', '1953'), ('1952', '1952'), ('1951', '1951'), ('1950', '1950'), ('1949', '1949'), ('1948', '1948'), ('1947', '1947'), ('1946', '1946'), ('1945', '1945'), ('1944', '1944'), ('1943', '1943'), ('1942', '1942'), ('1941', '1941'), ('1940', '1940'), ('1939', '1939'), ('1938', '1938'), ('1937', '1937'), ('1936', '1936'), ('1935', '1935'), ('1934', '1934'), ('1933', '1933'), ('1932', '1932'), ('1931', '1931'), ('1930', '1930'), ('1929', '1929'), ('1928', '1928'), ('1927', '1927'), ('1926', '1926'), ('1925', '1925'), ('1924', '1924'), ('1923', '1923'), ('1922', '1922'), ('1921', '1921'), ('1920', '1920'), ('1919', '1919'), ('1918', '1918'), ('1917', '1917'), ('1916', '1916'), ('1915', '1915'), ('1914', '1914'), ('1913', '1913'), ('1912', '1912'), ('1911', '1911'), ('1910', '1910'), ('1909', '1909'), ('1908', '1908'), ('1907', '1907'), ('1906', '1906'), ('1905', '1905'), ('1904', '1904'), ('1903', '1903'), ('1902', '1902'), ('1901', '1901'), ('1900', '1900'), ('1899', '1899'), ('1898', '1898'), ('1897', '1897'), ('1896', '1896'), ('1895', '1895'), ('1894', '1894'), ('1893', '1893'), ('1892', '1892'), ('1891', '1891'), ('1890', '1890'), ('1889', '1889'), ('1888', '1888'), ('1887', '1887'), ('1886', '1886'), ('1885', '1885'), ('1884', '1884'), ('1883', '1883'), ('1882', '1882'), ('1881', '1881'), ('1880', '1880'), ('1879', '1879'), ('1878', '1878'), ('1877', '1877'), ('1876', '1876'), ('1875', '1875'), ('1874', '1874'), ('1873', '1873'), ('1872', '1872'), ('1871', '1871'), ('1870', '1870'), ('1869', '1869'), ('1868', '1868'), ('1867', '1867'), ('1866', '1866'), ('1865', '1865'), ('1864', '1864'), ('1863', '1863'), ('1862', '1862'), ('1861', '1861'), ('1860', '1860'), ('1859', '1859'), ('1858', '1858'), ('1857', '1857'), ('1856', '1856'), ('1855', '1855'), ('1854', '1854'), ('1853', '1853'), ('1852', '1852'), ('1851', '1851'), ('1850', '1850'), ('1849', '1849'), ('1848', '1848'), ('1847', '1847'), ('1846', '1846'), ('1845', '1845'), ('1844', '1844'), ('1843', '1843'), ('1842', '1842'), ('1841', '1841'), ('1840', '1840'), ('1839', '1839'), ('1838', '1838'), ('1837', '1837'), ('1836', '1836'), ('1835', '1835'), ('1834', '1834'), ('1833', '1833'), ('1832', '1832'), ('1831', '1831'), ('1830', '1830'), ('1829', '1829'), ('1828', '1828'), ('1827', '1827'), ('1826', '1826'), ('1825', '1825'), ('1824', '1824'), ('1823', '1823'), ('1822', '1822'), ('1821', '1821'), ('1820', '1820'), ('1819', '1819'), ('1818', '1818'), ('1817', '1817'), ('1816', '1816'), ('1815', '1815'), ('1814', '1814'), ('1813', '1813'), ('1812', '1812'), ('1811', '1811'), ('1810', '1810'), ('1809', '1809'), ('1808', '1808'), ('1807', '1807'), ('1806', '1806'), ('1805', '1805'), ('1804', '1804'), ('1803', '1803'), ('1802', '1802'), ('1801', '1801'), ('1800', '1800'), ('1799', '1799'), ('1798', '1798'), ('1797', '1797'), ('1796', '1796'), ('1795', '1795'), ('1794', '1794'), ('1793', '1793'), ('1792', '1792'), ('1791', '1791'), ('1790', '1790'), ('1789', '1789'), ('1788', '1788'), ('1787', '1787'), ('1786', '1786'), ('1785', '1785'), ('1784', '1784'), ('1783', '1783'), ('1782', '1782'), ('1781', '1781'), ('1780', '1780'), ('1779', '1779'), ('1778', '1778'), ('1777', '1777'), ('1776', '1776'), ('1775', '1775'), ('1774', '1774'), ('1773', '1773'), ('1772', '1772'), ('1771', '1771'), ('1770', '1770'), ('1769', '1769'), ('1768', '1768'), ('1767', '1767'), ('1766', '1766'), ('1765', '1765'), ('1764', '1764'), ('1763', '1763'), ('1762', '1762'), ('1761', '1761'), ('1760', '1760'), ('1759', '1759'), ('1758', '1758'), ('1757', '1757'), ('1756', '1756'), ('1755', '1755'), ('1754', '1754'), ('1753', '1753'), ('1752', '1752'), ('1751', '1751'), ('1750', '1750'), ('1749', '1749'), ('1748', '1748'), ('1747', '1747'), ('1746', '1746'), ('1745', '1745'), ('1744', '1744'), ('1743', '1743'), ('1742', '1742'), ('1741', '1741'), ('1740', '1740'), ('1739', '1739'), ('1738', '1738'), ('1737', '1737'), ('1736', '1736'), ('1735', '1735'), ('1734', '1734'), ('1733', '1733'), ('1732', '1732'), ('1731', '1731'), ('1730', '1730'), ('1729', '1729'), ('1728', '1728'), ('1727', '1727'), ('1726', '1726'), ('1725', '1725'), ('1724', '1724'), ('1723', '1723'), ('1722', '1722'), ('1721', '1721'), ('1720', '1720'), ('1719', '1719'), ('1718', '1718'), ('1717', '1717'), ('1716', '1716'), ('1715', '1715'), ('1714', '1714'), ('1713', '1713'), ('1712', '1712'), ('1711', '1711'), ('1710', '1710'), ('1709', '1709'), ('1708', '1708'), ('1707', '1707'), ('1706', '1706'), ('1705', '1705'), ('1704', '1704'), ('1703', '1703'), ('1702', '1702'), ('1701', '1701'), ('1700', '1700'), ('1699', '1699'), ('1698', '1698'), ('1697', '1697'), ('1696', '1696'), ('1695', '1695'), ('1694', '1694'), ('1693', '1693'), ('1692', '1692'), ('1691', '1691'), ('1690', '1690'), ('1689', '1689'), ('1688', '1688'), ('1687', '1687'), ('1686', '1686'), ('1685', '1685'), ('1684', '1684'), ('1683', '1683'), ('1682', '1682'), ('1681', '1681'), ('1680', '1680'), ('1679', '1679'), ('1678', '1678'), ('1677', '1677'), ('1676', '1676'), ('1675', '1675'), ('1674', '1674'), ('1673', '1673'), ('1672', '1672'), ('1671', '1671'), ('1670', '1670'), ('1669', '1669'), ('1668', '1668'), ('1667', '1667'), ('1666', '1666'), ('1665', '1665'), ('1664', '1664'), ('1663', '1663'), ('1662', '1662'), ('1661', '1661'), ('1660', '1660'), ('1659', '1659'), ('1658', '1658'), ('1657', '1657'), ('1656', '1656'), ('1655', '1655'), ('1654', '1654'), ('1653', '1653'), ('1652', '1652'), ('1651', '1651'), ('1650', '1650')], max_length=4, verbose_name='Year Model')),
                ('gross_weight', models.FloatField(default=0, verbose_name='Gross Weight')),
                ('net_weight', models.FloatField(default=0, verbose_name='Net Weight')),
                ('shipping_weight', models.FloatField(default=0, verbose_name='Shipping Weight')),
                ('net_capacity', models.IntegerField(default=0, verbose_name='Net Capacity')),
                ('owner', apps.vehicle.models.CharField(default='', max_length=150, verbose_name='Owner')),
                ('contact_no', apps.vehicle.models.CharField(default='', max_length=13, verbose_name='Contact No.')),
                ('address', apps.vehicle.models.CharField(default='', help_text='(No., Street, City / Municipality, Province)', max_length=250, verbose_name='Address')),
                ('encumbered', apps.vehicle.models.CharField(default='', max_length=200, verbose_name='Encumbered')),
                ('details_f_registration', apps.vehicle.models.CharField(default='Not Available', max_length=250, verbose_name='Details of First Registration')),
                ('amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=15, verbose_name='Amount')),
                ('record_created', models.DateField(auto_now=True)),
                ('fk', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fk_cr_rn', to='apps.vehiclemodel')),
            ],
            options={
                'db_table': 'tbl_vehicle_cr',
            },
        ),
        migrations.CreateModel(
            name='MediaModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField(blank=True, null=True)),
                ('media_file', models.ImageField(default='', upload_to='profiles/', verbose_name='Profile Picture')),
                ('status', apps.media.models.CharField(default='active', max_length=10)),
                ('record_created', models.DateField(auto_now=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'db_table': 'tbl_media',
            },
        ),
        migrations.CreateModel(
            name='DriverLicenseModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('license_no', apps.operator.models.CharField(default='Not Available', max_length=120, verbose_name='License No.')),
                ('expiration_date', models.DateField(default=datetime.datetime.now, verbose_name='Expiration Date')),
                ('agency_code', apps.operator.models.CharField(default='Not Available', max_length=90, verbose_name='Agency Code')),
                ('restriction', apps.operator.models.CharField(default='Not Available', max_length=15, verbose_name='Restriction')),
                ('record_created', models.DateField(auto_now=True)),
                ('fk', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fk_dl_rn', to='apps.operatormodel')),
            ],
            options={
                'db_table': 'tbl_driver_license',
            },
        ),
        migrations.CreateModel(
            name='DocumentModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('document_name', apps.media.models.CharField(default='', help_text='Require to provide document name or else the document will not be upload.', max_length=150, verbose_name='Document Name')),
                ('media_file', models.FileField(default='', upload_to='documents/', verbose_name='Document File')),
                ('record_created', models.DateField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'db_table': 'tbl_documents',
                'ordering': ['-record_created'],
            },
        ),
        migrations.CreateModel(
            name='ContactModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('fullname', apps.operator.models.CharField(default='', max_length=100, verbose_name='Contact Person (Fullname)')),
                ('address', apps.operator.models.CharField(default='', help_text='No., Street, City / Municipality, Province, Zip Code', max_length=150, verbose_name='Address')),
                ('contact_no', apps.operator.models.CharField(default='', max_length=14, verbose_name='Contact No.')),
                ('relation', apps.operator.models.CharField(default='', max_length=50, verbose_name='Relationship')),
                ('record_created', models.DateField(auto_now=True)),
                ('fk', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fk_c_rn', to='apps.operatormodel')),
            ],
        ),
    ]
